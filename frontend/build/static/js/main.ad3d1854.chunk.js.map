{"version":3,"sources":["actions/methods/PersonActions.js","actions/index.js","hoc/Aux.js","components/Person.js","containers/Persons.js","components/App.js","hoc/WithClass.js","serviceWorker.js","reducers/methods/PersonReducer.js","reducers/index.js","index.js","stores/createStore.js"],"names":["addPerson","initialState","status","message","data","arguments","length","undefined","console","log","dispatch","type","PERSON_ADD","payload","deletePerson","PERSON_DELETE","updatePerson","event","id","name","target","value","PERSON_UPDATE","aux","props","children","person","react_default","a","createElement","className","age","change","onChange","click","onClick","Persons","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","inpuTextChangeHandler","newState","objectSpread2","state","concat","setState","dataArr","personName","split","alert","showPerson","_this2","personReducer","currentPerson","p","Person","Aux","map","index","key","addButton","Component","connect","_ref","bindActionCreators","WithClass","WrappedComponent","_Component","_class","apply","inherits","createClass","containers_Persons","Boolean","window","location","hostname","match","loading","error","action","maxId","it","reduce","previousValue","currentValue","newData","toConsumableArray","push","personsDelete","splice","persons","personIndex","findIndex","makeCombineReducers","asyncReducers","combineReducers","store","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","next","result","getState","createReduxStore","applyMiddleware","createStore","ReactDOM","render","es","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ad3d1854.chunk.js","sourcesContent":["import {PERSON_ADD, PERSON_DELETE, PERSON_UPDATE} from '../../actions/index';\n\nexport function addPerson(payload = {}) {\n\n    const initialState = {\n        status: true,\n        message: \"Person added successfully!\",\n        data: payload\n    };\n\n    console.log(\"addPerson\");\n\n    return (dispatch) => {\n        return dispatch({\n            type: PERSON_ADD,\n            payload: initialState\n        });\n    }\n}\n\nexport function deletePerson(payload = {}) {\n\n    const initialState = {\n        status: true,\n        message: \"Person Deleted successfully!\",\n        data: payload\n    };\n\n    console.log(\"deletePerson\");\n\n    return (dispatch) => {\n        return dispatch({\n            type: PERSON_DELETE,\n            payload: initialState\n        });\n    }\n}\n\nexport function updatePerson(event = {}, payload = {}) {\n\n    let data = {\n        id: payload,\n        name: event.target.value\n    };\n\n    const initialState = {\n        status: true,\n        message: \"Person Updated successfully!\",\n        data: data\n    };\n\n    console.log(\"updatePerson\");\n\n    return (dispatch) => {\n        return dispatch({\n            type: PERSON_UPDATE,\n            payload: initialState\n        });\n    }\n}\n\n/*POST(GET_PERSON_LIST_URL, payload)\n            .then((response) => {\n                if (!response.data.data) {\n                    response.data.data = [];\n                }\n                dispatch({\n                    type: PERSON_ADD,\n                    payload: response.data\n                });\n            });*/","export {addPerson, deletePerson, updatePerson} from './methods/PersonActions';\n\nexport const PERSON_ADD = 'PERSON_ADD';\nexport const PERSON_DELETE = 'PERSON_DELETE';\nexport const PERSON_UPDATE = 'PERSON_UPDATE';\n","const aux = (props) => props.children;\n\nexport default aux;","import React from 'react';\n\nconst person = (props) => {\n    return (\n        <div>\n            <p className=\"blue\">Hello Person {props.name} and {props.age}</p>\n            {props.change ? <input type=\"text\" onChange={props.change} value={props.name}/> : null}\n            {props.click ? <button onClick={props.click}>Delete Person</button> : null}\n        </div>\n    )\n};\n\nexport default person;","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from \"redux\";\nimport {addPerson, deletePerson, updatePerson} from '../actions/index';\nimport Aux from '../hoc/Aux';\nimport Person from '../components/Person';\n\nclass Persons extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            personName: '',\n            showPerson: true,\n        }\n    }\n\n    inpuTextChangeHandler = (event) => {\n        let value = event.target.value;\n        let name = event.target.name;\n        let newState = {...this.state};\n        newState[`${name}`] = value;\n        this.setState(newState);\n    };\n\n    addPerson = () => {\n        let dataArr = this.state.personName.split(\"-\");\n        if (dataArr.length === 2) {\n            let person = {name: dataArr[0], age: +dataArr[1]};\n            this.props.addPerson(person);\n        }\n        else {\n            alert(\"invalid data\");\n        }\n    };\n\n    render() {\n\n        let person = null;\n        const {personReducer} = this.props;\n        const data = personReducer.data;\n        let dataArr = this.state.personName.split(\"-\");\n        let currentPerson = null;\n        if (dataArr.length === 2) {\n            let p = {name: dataArr[0], age: +dataArr[1]};\n            currentPerson = <Person name={p.name} age={p.age}/>\n        }\n        if (this.state.showPerson) {\n            person = (\n                <Aux>\n                    {\n                        data.map((person, index) => {\n                            return <Person\n                                name={person.name}\n                                age={person.age}\n                                key={person.id}\n                                click={() => this.props.deletePerson(index)}\n                                change={(event) => this.props.updatePerson(event, person.id)}\n                            />\n                        })\n                    }\n                </Aux>\n            );\n        }\n\n        let addButton = (\n            <Aux>\n                <button onClick={this.addPerson}>Add Person</button>\n            </Aux>\n        );\n\n        return (\n            <Aux>\n                {currentPerson}\n                <p>{addButton}</p>\n                <input type=\"text\" onChange={(event) => this.inpuTextChangeHandler(event)}\n                       value={this.state.personName} name={'personName'}/>\n                <p>{personReducer.message}</p>\n                <div>{person}</div>\n            </Aux>\n        );\n    }\n}\n\nfunction mapStateToProps({personReducer}) {\n    return {personReducer};\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({addPerson, deletePerson, updatePerson}, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Persons);","import React from 'react';\nimport '../styles/App.css';\nimport Persons from './../containers/Persons';\nimport Aux from '../hoc/Aux';\nimport WithClass from '../hoc/WithClass';\n\nfunction App() {\n    return (\n        <Aux>\n            <Persons/>\n        </Aux>\n    );\n}\n\nexport default WithClass(App, \"App\");\n","import React, {Component} from 'react';\n\nconst withClass = (WrappedComponent, className) => {\n    return class extends Component {\n        render() {\n            return (\n                <div className={className}>\n                    <WrappedComponent {...this.props} />\n                </div>\n            )\n        }\n    }\n};\n\nexport default withClass;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {PERSON_ADD, PERSON_DELETE, PERSON_UPDATE} from '../../actions/index';\n\nconst initialState = {\n    status: true,\n    message: \"\",\n    data: [],\n    loading: false,\n    error: \"\"\n};\n\n\nconst personReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case PERSON_ADD:\n            console.log(\"Person Reducer -> PERSON_ADD\");\n            console.log(\"Person Reducer -> PERSON_ADD -> \" + action.payload.status);\n            console.log(\"Person Reducer -> PERSON_ADD -> \" + action.payload.message);\n            let maxId = state.data.map(it => it.id)\n                .reduce((previousValue = 0, currentValue) => previousValue > currentValue ? previousValue : currentValue, 0);\n            action.payload.data.id = (maxId + 1);\n            let newData = [...state.data];\n            newData.push(action.payload.data);\n\n            return {\n                ...state,\n                loading: true,\n                status: action.payload.status,\n                message: action.payload.message,\n                data: newData\n            };\n        case PERSON_DELETE:\n            console.log(\"Person Reducer -> PERSON_DELETE\");\n            console.log(\"Person Reducer -> PERSON_DELETE -> \" + action.payload.status);\n            console.log(\"Person Reducer -> PERSON_DELETE -> \" + action.payload.message);\n\n            const personsDelete = [...state.data];\n            personsDelete.splice(action.payload.data, 1);\n\n            return {\n                ...state,\n                loading: false,\n                status: action.payload.status,\n                message: action.payload.message,\n                data: personsDelete\n            };\n        case PERSON_UPDATE:\n            console.log(\"Person Reducer -> PERSON_UPDATE\");\n            console.log(\"Person Reducer -> PERSON_UPDATE -> \" + action.payload.status);\n            console.log(\"Person Reducer -> PERSON_UPDATE -> \" + action.payload.message);\n\n            const persons = [...state.data];\n\n            const personIndex = persons.findIndex(p => {\n                    return p.id === action.payload.data.id;\n                }\n            );\n\n            if (personIndex !== -1) {\n                const person = persons[personIndex];\n                person.name = action.payload.data.name;\n                persons[personIndex] = person;\n            }\n\n            return {\n                ...state,\n                loading: false,\n                status: action.payload.status,\n                message: action.payload.message,\n                data: persons\n            };\n        default:\n            return state;\n    }\n};\n\nexport default personReducer;","import {combineReducers} from 'redux'\nimport personReducer from \"./methods/PersonReducer\"\n\nconst makeCombineReducers = (asyncReducers) => {\n    return combineReducers({\n        personReducer,\n        ...asyncReducers\n    })\n};\n\nexport default makeCombineReducers;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\n\nimport './styles/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport createStore from \"./stores/createStore\";\n\nconst store = createStore();\n\nReactDOM.render(<Provider store={store}><App/></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {applyMiddleware, compose, createStore as createReduxStore} from 'redux';\nimport thunk from 'redux-thunk';\nimport makeCombineReducers from \"../reducers\";\n\nconst createStore = () => {\n\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n    const logger = store => {\n        return next => {\n            return action => {\n                console.log(\"[Middleware] Dispatching -> \", action);\n                const result = next(action);\n                console.log(\"[Middleware] Next State -> \", store.getState());\n                return result;\n            }\n        }\n    };\n\n    const middleware = [thunk, logger];\n\n    return createReduxStore(makeCombineReducers(), composeEnhancers(applyMiddleware(...middleware)));\n};\n\nexport default createStore;\n\n\n"],"sourceRoot":""}